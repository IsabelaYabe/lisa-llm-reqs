1.1.1.1	The solution should scale, maintaining acceptable performance, as the number of concurrent users increase.
1.1.1.2	The solution should scale, maintaining acceptable performance, as the number of transactions increase.
1.1.1.3	The solution should scale, maintaining acceptable performance, as the number of patients increase.
1.1.1.4	The solution should be stable and will operate for sustained amounts of time without interruption.
1.1.1.5	The solution should support 33 CDCR institutions and headquarters.
1.1.2.6	The solution should be reliable. Reliability is the ability to rely on the system. Reliability is impacted primarily by the quality of the system. Reliability means that the user can rely on the accuracy of the system.
1.1.2.7	The solution should use proven technologies and products. Technologies and products will only be approved after they have been proven in the marketplace (i.e. released to customers for at least 6 months).
1.1.3.1	solution should be able to generate a backup copy of the application data, security credentials, and log/audit files.
1.1.3.2	The system restore functionality should result in a fully operational and secure state. This state should include the restoration of the application data, security credentials, and log/audit files to their previous state.
1.1.3.3	The system should have ability to run a backup concurrently with the operation of the application.
1.1.3.10	The solution Mean Time to Repair (MTTR) should be: The solution average repair time should be less than four (4) hours.
1.1.3.11	The solution Recovery Time Objective (RTO) should be: The solution should be restored within 72 hours after a disaster (or disruption) in order to avoid unacceptable consequences associated with a break in business continuity.
1.1.3.12	The solution Recovery Point Objective (RPO) should be: The solution should restore data as of previous business day.
1.1.4.13	The solution should be maintainable that enables developers to debug, fix, integrate, and test. The marketplace should provide trained, affordable staff that have the skill sets to maintain the system.
1.1.4.14	The solution should provide end-to-end traceability of each transaction. Each message element of a transaction should be loggable each time it enters or leaves a host system of the solution.
1.1.4.15	The solution should use supported software release levels. Computer software will be maintained at proven, stable version release levels that are supported by vendors.
1.1.5.16	The solution should be extensible where the solution can accommodate new functionality without compromising the system's dependability or future extensibility.
1.1.5.17	The solution should be configurable which allows the user or developer to configure the system to meet changing requirements without changing code.
1.1.6.18	The solution should have a user interface compliant with American Disability Act (i.e., Section 508 compliant).
1.1.7.19	The solution should support load balancing across servers.
1.1.7.20	The solution should support fail-over in the event of a failure to ensure the solution is highly available.
1.1.8.21	The solution should  enforce referential integrity.
1.1.8.2	The solution should be configurable to prevent corruption or loss of data already accepted into the system in the event of a system failure (e.g. integrating with a UPS, etc.).
1.2.1	The solution should allow for use of 3rd party reporting tools.
1.2.2	The solution should support concurrency. Concurrency is the ability for multiple instances of the same process (or batch program) to execute at the same time.
1.2.3	The should use a layered architecture where business components/services can be reused across multiple interfaces (e.g. Web, IVR, mobile). A layered architecture defines a clean separation between client, business logic, and database access.
1.2.2.6	The solution should be able to support time synchronization using NTP/SNTP, and use this synchronized time in all security records of time.
1.2.4	All email capabilities of the system must support the IETF Simple Mail Transfer Protocol (SMTP) and/or IETF Post Office Protocol (POP) standards.
1.2.5	The solution should support IETF Lightweight Directory Access Protocol (LDAP) and/or Microsoft Active Directory integration as the mechanism to retrieve authentication information.
1.2.6	The solution should use IAB Transmission Control Protocol/Internet Protocol (TCP/IP) for network communications.
1.2.7	The solution should support IETF SSH File Transfer Protocol (SFTP) for file transfer capabilities.
1.2.8	The solution should support IETF Domain Name System (DNS).
1.2.9	The solution should support IETF Dynamic Host Configuration Protocol (DHCP).
1.2.10	The solution should support W3C Secure Hypertext Transfer Protocol (HTTPS).
1.2.11	All server components of CCHCS solutions should run on Microsoft Windows Server and/or Red Hat Linux.
1.2.12	All client desktop components of CCHCS solutions should run on Microsoft Windows Client operating system.
1.2.13	All transactional data should be stored in a relational database that supports SQL.
1.2.14	All enterprise relational databases should be implemented using Microsoft SQL Server or Oracle Database technologies.
1.2.15	The solution should provide data retention of all patient-inmate information in a form that is accessible for auditing, analysis, and reporting.
1.2.16	The solution should store seven (7) years of patient-inmate information within the operational data store.
1.3.1	The solution should provide the ability to migrate setups/data between environments with minimal reconfigurations, reentry of data, or installs.
1.3.2	The solution should provide the ability to customize and extend the product .Net, Java or XML technologies.
1.3.3	All system configurations should be supported by the COTS upgrade process. Solution upgrades should not affect past customizations and should be verified by custom test scripts.
1.3.4	The build, release, and install processes should be documented and repeatable.
1.3.5	Environments (physical or virtual) should be available to support development, testing, production, and production fix processes.
1.3.6	The solution should support version control of the product's development, test, or production configurations via an external management software product.
1.3.7	All configuration items (e.g. COTS extensions, configuration files, system interface programs, data conversion programs) should be under configuration management control.
1.3.8	The solution should support automation of the testing process natively or through integration with other COTS testing tools.
1.3.9	Debugging capabilities should exist for all development items (e.g. workflows, extensions, custom adapters, transformations).
2.0.1	The integration architecture should support a service-oriented architecture (SOA) which is a software design approach in which an application consists of software services and software service consumers.
2.0.2	The solution should provide SOA integration capabilities that conforms to  Web Services Interoperability (WS-I).
2.1.1	The solution should integrate with the existing CCHCS Documentum platform, known as eUHR, to store patient documents.
2.1.2	The solution should integrate with eUHR search & retrieve a list of patient documents.
2.1.3	The solution should integrate with eUHR retrieve & display patient documents.
2.2.1	The solution should integrate with CCHCS PACS/RIS solution to retrieve & display patient images.
2.3.1	The solution should integrate with CCHCS;s Dictation and Transcription to retrieve and play dictated and transcribed medical records for patients.
2.4.1	The solution should integrate with CCHCS' Third Party Administrator to send them health care claims for processing.
2.5.1	The solution should integrate with Quest 360 to retrieve & display lab results.
2.6.1	The solution should integrate with Central Fill solution to submit medication orders.
2.6.2	The solution should integrate with Central Fill solution to receive medication dispense information.
2.7.1	The solution should integrate with the Medical Classification solution to track patient classification.
2.8.1	The solution should integrate with CDCR SOMS to retrieve patient demographic data.
2.8.2	The solution should integrate with CDCR SOMS to post new or changed appointments on the inmate's calendar.
2.8.3	The solution should integrate with CDCR SOMS to receive notifications that a healthcare appointment has been "bumped" by a higher priority appointment and it needs to be rescheduled.
2.8.4	The solution should integrate with CDCR SOMS to receive patient movement notifications.
2.8.5	The solution should integrate with CDCR SOMS to receive TB assessment data.
2.8.6	The solution should integrate with CDCR SOMS to receive patient Effective Communications/ADA information.
2.9.1	The solution should leverage CCHCS Digital Signature infrastructure for digital signatures.
2.9.2	The solution should leverage CCHCS Secure FTP infrastructure for sending files external to CCHCS data center.
2.9.3	The solution should leverage CCHCS Wireless infrastructure for mobile devices.
2.10.1	The solution should provide an open interface to enable CCHCS' Utilization Management solution and staff to extract data for analysis.
2.10.2	The solution should provide an open interface to enable Office of Inspector General (OIG) staff to extract data for auditing purposes.
3.1.1	The solution should support IETF Simple Network Management Protocol (SNMP) traps as a mechanism for event notification.
3.1.2	The solution should support IETF Syslog as a mechanism for logging.
3.1.3	The solution should support remote monitoring and administration via Netscape Secure Sockets Layer (SSL), IETF Secure Shell (SSH), IETF IP Security (IPSEC) or similar secure method.
3.1.4	The solution should monitor COTS-provided components & services.
3.1.5	The solution should support alerts for defined thresholds and errors.
3.1.6	The solution should provide a system management console.
3.1.7	The solution should support alert notifications via email.
3.1.8	The solution should support alert notifications via pager.
3.1.9	The solution should provide a browser interface for monitoring and administration.
3.1.10	The solution should include GUI tools for monitoring of processes and errors.
3.1.11	The solution should include a command line interface to allow automation of system processes (e.g. service startup, service shutdown).
3.2.1	The support manual should provide the information necessary to service and maintain an operational system or component throughout its life cycle. A support manual includes the associated hardware and software and procedures for servicing, repairing, or reprogramming it.
3.2.2	The installation manual should provide the information necessary to install a system, set initial parameters, and prepare the system or component for operational use.
3.2.3	The operator manual must provide the information necessary to initiate and operate a system. The operator manual includes procedures for preparation, operation, monitoring, and recovery.
3.2.4	The programmer manual must provide the information necessary to develop or modify software for a given computer system. The programmer manual includes equipment configuration, operational characteristics, programming features, input/output features, and compilation or assembly features of the computer system.
3.2.5	The diagnostic manual must provide the information necessary to execute diagnostic procedures for a system, identify malfunctions, and remedy those malfunctions. The diagnostic manual includes diagnostic features of the system and diagnostic tools available for its support.
3.2.6.1	The solution should include documentation that describes the patch (hot-fix) handling process the vendor will use for EHR (eRx), operating system and underlying tools (e.g. a specific web site for notification of new patches, an approved patch list, special instructions for installation, and post-installation test).
3.2.6.2	The solution should include documentation that explains system error or performance messages to users and administrators, with the actions required.
3.2.6.3	"The solution should include documentation of product capacities (e.g. number of users, number of transactions per second, number of records, network load, etc.) and the baseline representative configurations assumed for these capacities (e.g. number or type of processors, server/workstation configuration and network capacity, etc.).
3.2.6.4	The solution should include documented procedures for product installation, start-up and/or connection.
3.2.6.9	The solution should include documentation that describes the steps needed to confirm that the system installation was properly completed and that the system is operational.